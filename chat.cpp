/******************************************************************************
 *                                                                            *
 * Compilar con fltk-config --compile chat.cpp                                *
 *                                                                            *
 ******************************************************************************/

// generated by Fast Light User Interface Designer (fluid) version 1.0304

#include "chat.h"
#include <thread> // std::thread

// Configuracion de cliente y servidor
void enviar()
{
  ;
}

void recibir()
{
  ;
}
void UserInterface::cb_m_Send_i(Fl_Button *, void *)
{
  const char *text = m_Input->value();

  /**
 * AGREGAR AQUI CODIGO PARA ENVIAR TEXTO AL OTRO CHAT.
 **/

  /**
 * AGREGAR CODIGO ARRIBA DE ESTE COMENTARIO.
 **/
  m_Output->insert("Yo: ");
  m_Output->insert(text);
  m_Output->insert("\n");
  m_Input->value("");
}
void UserInterface::cb_m_Send(Fl_Button *o, void *v)
{
  ((UserInterface *)(o->parent()->user_data()))->cb_m_Send_i(o, v);
}

UserInterface::UserInterface()
{
  m_Buffer = new Fl_Text_Buffer();
  {
    m_MainWindow = new Fl_Double_Window(400, 400);
    m_MainWindow->user_data((void *)(this));
    m_MainWindow->align(Fl_Align(FL_ALIGN_CLIP | FL_ALIGN_INSIDE));
    {
      m_Output = new Fl_Text_Display(5, 5, 390, 327);
      m_Output->buffer(m_Buffer);
    } // Fl_Text_Display* m_Output
    {
      m_Input = new Fl_Input(70, 335, 250, 60, "Entrada:");
    } // Fl_Input* m_Input
    {
      m_Send = new Fl_Button(325, 355, 70, 20, "Enviar");
      m_Send->callback((Fl_Callback *)cb_m_Send);
    } // Fl_Button* m_Send
    m_MainWindow->end();
  } // Fl_Double_Window* m_MainWindow
}

void UserInterface::show(int argc, char **argv)
{
  m_MainWindow->show(argc, argv);
}

int main(int argc, char **argv)
{
  UserInterface *ui = new UserInterface();
  ui->show(argc, argv);
  std::thread cliente(enviar);
  std::thread servidor(recibir);
  return Fl::run();
}
